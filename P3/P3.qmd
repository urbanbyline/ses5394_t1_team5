---
title: "P3: Trip Generation"
format: 
  html:
    theme: minty
    toc: true
    toc-location: left
editor: visual
---

## Load libraries

This analysis uses the following packages:

```{r, warning=FALSE, message=FALSE}

library(tidyverse)
library(here)
library(knitr)
library(srvyr)
library(mlogit)
library(caret)
library(pscl)
library(readr)
library(MASS)
library(dplyr)


here("code",
     "mlogit_helpers.R") |>
  source()
```

## Load datasets

This analysis uses household-level, person-level, and trip-level data from the 2017 National Household Travel Survey. Keep in mind that TDM23 is meant to represent travel on a "typical weekday", so for comparison purposes, we'll filter our data to only include participants who completed their travel diary on a weekday.

```{r}
hh_data <- here("data",
                "NHTS",
                "hhpub.csv") |>
  read_csv(show_col_types = FALSE)

person_data <- here("data",
                    "NHTS",
                    "perpub.csv") |>
  read_csv(show_col_types = FALSE)

trip_data <- here("data",
                    "NHTS",
                    "trippub.csv") |>
  read_csv(show_col_types = FALSE)

str(trip_data)


trip_data <- dplyr::select(trip_data,
  HOUSEID,
  PERSONID,
  TDTRPNUM,
  TRIPPURP,
  WHYFROM,
  WHYTO,
  TRPTRANS, 
  R_AGE,
  EDUC,
  TRPACCMP,
  PSGR_FLG,
  R_SEX,
  TRAVDAY,
  WTTRDFIN)

head(trip_data, 20)

trip_data <- trip_data %>%
  mutate(TRAVDAY = case_when(
    TRAVDAY %in% c("02", "03", "04", "05", "06") ~ "WEEKDAY",
    TRAVDAY %in% c("01", "07") ~ "WEEKEND",
    TRUE ~ NA_character_  # Handle any unexpected values
  ))

person_data <- person_data %>%
  mutate(TRAVDAY = case_when(
    TRAVDAY %in% c("02", "03", "04", "05", "06") ~ "WEEKDAY",
    TRAVDAY %in% c("01", "07") ~ "WEEKEND",
    TRUE ~ NA_character_  # Handle any unexpected values
  ))

chaffeured_trips <- trip_data %>%
  mutate(UNIQUEID = paste(HOUSEID, PERSONID, sep = "_"))

chaffeured_trips <- trip_data %>%
  filter(WHYTO == "06") %>%
  group_by(HOUSEID, PERSONID)


```

Defining the following columns for clarity:

TDTRPNUM - Number of trips in a day starting with one for each person in the file

TRIPPUP - Generalized Purpose of Trip - Home Based and Non-Home Based. Categories are the following: HBO (home-based trip other), HBSHOP (home-based trip shopping), HBSOCREC (home based trip (social/recreational), HBW (home based trip work), NHB (not a home based trip)

WHYFROM - Trip Origin Purpose such as Regular home activities, work, child care, etc

WHYTO - Trip Destination Purpose such as work child care etc

TRPTRANS - Trip Mode Derived such as walking, car

R_AGE - Respondent age

EDUC - Educational Attainment

WTTRDFIN - final trip weight

###### [Other Relevant columns to consider:]{.underline}

[PSGR_FLG - Respondent was passenger on trip - so our definition could be people as drivers vs people was passengers? Where 01 is Yes they were the passenger and 02 is no they were the driver]{.underline}

[TRPACCMP - Count of People on Trip - so our definition could be driving by yourself or carpooling]{.underline}

My New Definition: Dropping off picking up. 06 in WHYTO and WHYFROM

## Building Predictive Model

With the predictor variables:

-   PERSON LEVEL gender -

-   PERSON LEVEL age -

-   PERSON LEVEL worker status -

-   HOUSEHOLD LEVEL vehicle availability -

-   HOUSEHOLD LEVEL household income -

-   HOUSEHOLD LEVEL household size - done

-   HOUSEHOLD LEVEL young Child

-   HOUSEHOLD LEVEL - NUMBER OF WORKERS

-   HOUSEHOLD LEVEL -number of seniors

-   TRIP LEVEL - TRAVEL DAY

First clean up household level data. Then clean up person level data. Then clean up chaffeur trip count.

Then left join household level into person level data and chaffeur trip count.

chaffeured_trips \<- chaffeured_trips %\>%

mutate(TRAVDAY = case_when(

TRAVDAY %in% c("02", "03", "04", "05", "06") \~ "WEEKDAY",

TRAVDAY %in% c("01", "07") \~ "WEEKEND",

TRUE \~ NA_character\_ \# Handle any unexpected values

))

```{r}

hh_data <- hh_data |>
  dplyr::select(WRKCOUNT, DRVRCNT, HHVEHCNT, HHSIZE, NUMADLT, HHFAMINC, HOUSEID)


hh_data <- hh_data |>
  mutate(veh_avail = case_when(HHVEHCNT == 0 ~ "Zero",
                               DRVRCNT > HHVEHCNT ~ "Insuff.",
                               TRUE ~ "Suff."))
hh_data <- hh_data |>
  mutate(n_child = HHSIZE - NUMADLT)

n_seniors_in_hh <- person_data |>
  mutate(is_senior = R_AGE > 64) |>
  group_by(HOUSEID) |>
  summarise(n_seniors_in_hh = sum(is_senior))

hh_data <- hh_data |>
  left_join(n_seniors_in_hh)

hh_data <- hh_data |>
  mutate(three_drivers = DRVRCNT > 2)

hh_data <- hh_data |>
  mutate(n_extra_drivers = ifelse(three_drivers, DRVRCNT - 2, 0))

hh_data <- hh_data |>
  mutate(HHFAMINC = as.numeric(HHFAMINC)) |>
  filter(HHFAMINC > 0) |>
  mutate(income = case_when(HHFAMINC < 4 ~ "low",
                             HHFAMINC < 5 & HHSIZE > 1 ~ "low",
                             HHFAMINC < 6 & HHSIZE > 3 ~ "low",
                             HHFAMINC < 7 & HHSIZE > 5 ~ "low",
                             HHFAMINC < 8 & HHSIZE > 7 ~ "low",
                             HHFAMINC > 8 ~ "high",
                            TRUE ~ "medium")) |>
    mutate(income = factor(income, levels = c("medium", "low", "high")))

non_work_driver <- person_data |>
  mutate(non_work_driver = WORKER == "02" & DRIVER == "01") |>
  group_by(HOUSEID) |>
  summarise(non_work_driver = max(non_work_driver))

hh_data <- hh_data |>
  left_join(non_work_driver)

hh_data <- hh_data |>
  dplyr::select(HOUSEID, veh_avail, WRKCOUNT, n_child, n_seniors_in_hh, HHSIZE, income)


ppl_data <- person_data %>%
  dplyr::select(HOUSEID, PERSONID, R_SEX, WKFTPT, R_RACE, R_AGE, TRAVDAY) %>%
  mutate(
    WKFTPT = as.numeric(WKFTPT),
    age_category = case_when(
      R_AGE >= 1 & R_AGE <= 15 ~ "child",
      R_AGE >= 17 & R_AGE <= 21 ~ "YA",
      R_AGE > 21 & R_AGE <= 65 ~ "adult",
      R_AGE >= 66 ~ "senior",
      TRUE ~ NA_character_  # Handles any unexpected values
    )
  ) %>%
  filter(WKFTPT > 0) %>%
  mutate(
    female = R_SEX == "02",
    part_time = WKFTPT == 2
  )


chaffeured_trips_count <- chaffeured_trips |>
  group_by(HOUSEID, PERSONID, TRAVDAY) |>
  summarise(chaffeured_trips = n())


ppl_data <- ppl_data |>
  left_join(hh_data, by = "HOUSEID") |>
  left_join(chaffeured_trips_count, by = c("HOUSEID", "PERSONID")) |>
  mutate(chaffeured_trips = replace_na(chaffeured_trips, 0))  # Ensure NA values are replaced with 0

library(dplyr)

ppl_data <- ppl_data %>%
  rename(TRAVDAY = TRAVDAY.x)






```

### Data Visualizations and Regression

```{r}
ggplot(ppl_data) +
  geom_histogram(aes(x = chaffeured_trips),
                 binwidth = 1,
                 color = "gray",
                 fill = "lightgreen") +
  scale_x_continuous(name = "Number of chaffeured trips",
                     breaks = seq(0, 12, by=1)) +
  scale_y_continuous(name = "Number of workers in sample") +
  theme_minimal()


ppl_data |>
  summarise(`Average count of chaffeured_trips trips` = mean(chaffeured_trips),
            `Standard deviation` = sd(chaffeured_trips)) |>
  kable(digits = 3)


zero_inflated_chaffeured <- zeroinfl(chaffeured_trips ~ 
                          n_seniors_in_hh +
                          n_child +
                          HHSIZE+
                          R_AGE +
                          WRKCOUNT +                          
                          veh_avail +                          
                          income +                          
                          female +                          
                          part_time +
                          TRAVDAY|                         
                          n_seniors_in_hh +
                          n_child +
                          HHSIZE+
                          R_AGE +
                          WRKCOUNT +                          
                          veh_avail +                          
                          income +                          
                          female +                          
                          part_time+
                          TRAVDAY,     
                        data = ppl_data,    
                        dist = "negbin")

summary(zero_inflated_chaffeured)

AIC(zero_inflated_chaffeured)

```

